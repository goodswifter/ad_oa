def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
// if (flutterRoot == null) {
//     throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
// }

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"
apply plugin: 'com.huawei.agconnect'

def keystorePropertiesFile = rootProject.file("key.properties")
def keystoreProperties = new Properties()
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
android {
    compileSdkVersion 31

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId "com.jingshonline.oa"
        minSdkVersion 21
        targetSdkVersion 31
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
        multiDexEnabled true
        // ndk {
        //     //根据需要 自行选择添加的对应cpu类型的.so库。
        //     abiFilters  'armeabi-v7a'
        //     // 还可以添加 'x86', 'x86_64', 'mips', 'mips64' , 'arm64-v8a','x86', 'x86_64', 'mips', 'mips64','armeabi-v7a','armeabi','armeabi-v7a',
        // }    
        
        manifestPlaceholders = [
            XG_ACCESS_ID : "1580007867",
            XG_ACCESS_KEY : "A85T3JSPF2SP",
            VIVO_APPID:"105521005",
            VIVO_APPKEY:"ab6bbbba6779acda057392c02d0330b8",
        ]
        
       

    }
signingConfigs {
   release {
       keyAlias keystoreProperties['keyAlias']
       keyPassword keystoreProperties['keyPassword']
       storeFile file(keystoreProperties['storeFile'])
       storePassword keystoreProperties['storePassword']
   }
}
    buildTypes {
        release {
            // TODO: Add your own signing config for the release build.
            // Signing with the debug keys for now, so `flutter run --release` works.
            signingConfig signingConfigs.release
            // ndk {
            //     //根据需要 自行选择添加的对应cpu类型的.so库。
            //     abiFilters  'armeabi-v7a'
            //     // 还可以添加 'x86', 'x86_64', 'mips', 'mips64' , 'arm64-v8a','x86', 'x86_64', 'mips', 'mips64','armeabi-v7a','armeabi','armeabi-v7a',
            // }
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            shrinkResources true
            minifyEnabled true

        }

    }
    buildToolsVersion '30.0.3'
lintOptions {
          checkReleaseBuilds false
          // Or, if you prefer, you can continue to check for errors in release builds,
          // but continue the build even when errors are found:
          abortOnError false
      }
}

flutter {
    source '../..'
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'com.huawei.agconnect:agconnect-core:1.5.2.300'
    implementation 'com.tencent.tpns:xiaomi:1.2.7.1-release'
    implementation 'com.tencent.tpns:oppo:1.2.7.1-release'
    implementation 'com.tencent.tpns:vivo:1.2.7.1-release'
    implementation 'com.tencent.tpns:meizu:1.2.7.1-release'
}
